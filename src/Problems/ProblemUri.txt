data:text/html;base64,PCFET0NUWVBFIGh0bWw+CjxodG1sPgoKPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8dGl0bGU+UXVpY2sgU29ydDwvdGl0bGU+CiAgICA8c3R5bGU+CiAgICAgICAgLyogRnJvbSBleHRlbnNpb24gdnNjb2RlLmdpdGh1YiAqLwogICAgICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC4KICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uCiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKICAgICAgICAudnNjb2RlLWRhcmsgaW1nW3NyYyQ9XCNnaC1saWdodC1tb2RlLW9ubHldLAogICAgICAgIC52c2NvZGUtbGlnaHQgaW1nW3NyYyQ9XCNnaC1kYXJrLW1vZGUtb25seV0gewogICAgICAgICAgICBkaXNwbGF5OiBub25lOwogICAgICAgIH0KICAgIDwvc3R5bGU+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0va2F0ZXgvZGlzdC9rYXRleC5taW4uY3NzIj4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0va2F0ZXgtY29weXRleEBsYXRlc3QvZGlzdC9rYXRleC1jb3B5dGV4Lm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCIKICAgICAgICB0eXBlPSJ0ZXh0L2NzcyI+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiCiAgICAgICAgaHJlZj0iaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL01pY3Jvc29mdC92c2NvZGUvZXh0ZW5zaW9ucy9tYXJrZG93bi1sYW5ndWFnZS1mZWF0dXJlcy9tZWRpYS9tYXJrZG93bi5jc3MiPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IgogICAgICAgIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9NaWNyb3NvZnQvdnNjb2RlL2V4dGVuc2lvbnMvbWFya2Rvd24tbGFuZ3VhZ2UtZmVhdHVyZXMvbWVkaWEvaGlnaGxpZ2h0LmNzcyI+CiAgICA8c3R5bGU+CiAgICAgICAgYm9keSB7CiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBXUEMnLCAnU2Vnb2UgVUknLCBzeXN0ZW0tdWksICdVYnVudHUnLCAnRHJvaWQgU2FucycsIHNhbnMtc2VyaWY7CiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNjsKICAgICAgICB9CiAgICA8L3N0eWxlPgogICAgPHN0eWxlPgogICAgICAgIC50YXNrLWxpc3QtaXRlbSB7CiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICAgICAgICB9CgogICAgICAgIC50YXNrLWxpc3QtaXRlbS1jaGVja2JveCB7CiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAtMjBweDsKICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgICAgICAgfQogICAgPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5IGNsYXNzPSJ2c2NvZGUtYm9keSB2c2NvZGUtbGlnaHQiPgogICAgPGgxIGlkPSJkZXNjcmlwdGlvbiI+RGVzY3JpcHRpb248L2gxPgogICAgPHA+R2FzIGxpbWl0OiAxMDAwMDAwIGdhczwvcD4KICAgIDxwPllvdSdyZSBnaXZlIGFuIDxjb2RlPnVpbnQyNTZbXTwvY29kZT4gYXJyYXksIHdob3NlIGxlbmd0aCBpcyBubyBtb3JlIHRoYW4gPHNwYW4gY2xhc3M9ImthdGV4Ij48c3BhbgogICAgICAgICAgICAgICAgY2xhc3M9ImthdGV4LW1hdGhtbCI+PG1hdGggeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUwiPgogICAgICAgICAgICAgICAgICAgIDxzZW1hbnRpY3M+CiAgICAgICAgICAgICAgICAgICAgICAgIDxtcm93PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPG1uPjEwMDA8L21uPgogICAgICAgICAgICAgICAgICAgICAgICA8L21yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhbm5vdGF0aW9uIGVuY29kaW5nPSJhcHBsaWNhdGlvbi94LXRleCI+MTAwMDwvYW5ub3RhdGlvbj4KICAgICAgICAgICAgICAgICAgICA8L3NlbWFudGljcz4KICAgICAgICAgICAgICAgIDwvbWF0aD48L3NwYW4+PHNwYW4gY2xhc3M9ImthdGV4LWh0bWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj48c3BhbiBjbGFzcz0iYmFzZSI+PHNwYW4gY2xhc3M9InN0cnV0IgogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iaGVpZ2h0OjAuNjQ0NGVtOyI+PC9zcGFuPjxzcGFuIGNsYXNzPSJtb3JkIj4xMDAwPC9zcGFuPjwvc3Bhbj48L3NwYW4+PC9zcGFuPiAuIFRyeSB0bwogICAgICAgIHNvcnQgaXQgaW4gdGhlIGluY3JlYXNpbmcgbWFubmVyLjwvcD4KICAgIDxoMSBpZD0iaW5wdXQiPklucHV0PC9oMT4KICAgIDx1bD4KICAgICAgICA8bGk+PGNvZGU+dWludDI1NltdIG1lbW9yeTwvY29kZT4gOiBUaGUgYXJyYXkgdGhhdCB5b3UgbmVlZCB0byBzb3J0LjwvbGk+CiAgICA8L3VsPgogICAgPGgxIGlkPSJvdXRwdXQiPk91dHB1dDwvaDE+CiAgICA8dWw+CiAgICAgICAgPGxpPjxjb2RlPnVpbnQyNTZbXSBtZW1vcnk8L2NvZGU+IDogVGhlIGFycmF5IHNvcnRlZCBpbiB0aGUgaW5jcmVhc2luZyBtYW5uZXIuPC9saT4KICAgIDwvdWw+CiAgICA8aDEgaWQ9ImV4YW1wbGUiPkV4YW1wbGU8L2gxPgogICAgPGgyIGlkPSJpbnB1dC0xIj5JbnB1dDwvaDI+CiAgICA8cHJlPjxjb2RlPlsxMTQ1MTQsIDE5MTk4MTAsIDEsIDEsIDQsIDUsIDEsIDRdCjwvY29kZT48L3ByZT4KICAgIDxoMiBpZD0ib3V0cHV0LTEiPk91dHB1dDwvaDI+CiAgICA8cHJlPjxjb2RlPlsxLCAxLCAxLCA0LCA0LCA1LCAxMTQ1MTQsIDE5MTk4MTBdCjwvY29kZT48L3ByZT4KICAgIDxoMSBpZD0ibm90ZSI+Tm90ZTwvaDE+CiAgICA8cD5Zb3VyIGNvbnRyYWN0IHNob3VsZCBpbXBsZW1lbnQgdGhlIGludGVyZmFjZSBiZWxvdyB0byBpbnRlcmFjdCB3aXRoIHRoZSBqdWRnZS48L3A+CiAgICA8cHJlPjxjb2RlIGNsYXNzPSJsYW5ndWFnZS1zb2xpZGl0eSI+aW50ZXJmYWNlIFF1aWNrU29ydFNvbHV0aW9uSW50ZXJmYWNlIGlzIFNvbHV0aW9uSW50ZXJmYWNlIHsKICAgIGZ1bmN0aW9uIHJ1bih1aW50MjU2W10gbWVtb3J5KSBleHRlcm5hbCBwYXlhYmxlIHJldHVybnMgKHVpbnQyNTZbXSBtZW1vcnkpOwp9CjwvY29kZT48L3ByZT4KICAgIDxwPk9yIHlvdSBjYW4gYWxzbyBjb3B5LXBhc3RlIHRoZSB0ZW1wbGF0ZSBiZWxvdyBmb3IgY29udmVuaWVuY2UuPC9wPgogICAgPHByZT48Y29kZSBjbGFzcz0ibGFuZ3VhZ2Utc29saWRpdHkiPi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBNSVQKCnByYWdtYSBzb2xpZGl0eSBeMC44LjE4OwoKaW50ZXJmYWNlIFF1aWNrU29ydFNvbHV0aW9uSW50ZXJmYWNlIHsKICAgIGZ1bmN0aW9uIHJ1bih1aW50MjU2W10gbWVtb3J5KSBleHRlcm5hbCBwYXlhYmxlIHJldHVybnMgKHVpbnQyNTZbXSBtZW1vcnkpOwp9Cgpjb250cmFjdCBNeVNvbHV0aW9uIGlzIFF1aWNrU29ydFNvbHV0aW9uSW50ZXJmYWNlIHsKICAgIGZ1bmN0aW9uIHJ1bih1aW50MjU2W10gbWVtb3J5IGFycikgZXh0ZXJuYWwgcGF5YWJsZSBvdmVycmlkZSByZXR1cm5zICh1aW50MjU2W10gbWVtb3J5KSB7CiAgICAgICAgCiAgICB9Cn0KCjwvY29kZT48L3ByZT4KCiAgICA8c2NyaXB0IGFzeW5jIHNyYz0iaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9rYXRleC1jb3B5dGV4QGxhdGVzdC9kaXN0L2thdGV4LWNvcHl0ZXgubWluLmpzIj48L3NjcmlwdD4KCjwvYm9keT4KCjwvaHRtbD4=